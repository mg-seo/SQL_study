-- 트리거 : 트리거는 테이블에 부착한 형태로 AFTER, BEFORE 트리거가 있습니다.
-- AFTER는 DML문장이 타겟테이블에 실행된 이후에 동작하는 트리거
-- BEFORE는 DML문장이 타겟테이블에 실행되기 이전에 동작하는 트리거

SET SERVEROUTPUT ON;
CREATE TABLE TBL_TEST(
    ID VARCHAR2(30),
    TEXT VARCHAR2(30)
);

--트리거생성
CREATE OR REPLACE TRIGGER TBL_TEST_TRG
    AFTER UPDATE OR INSERT OR DELETE --트리거 종류와 동작시점
    ON TBL_TEST --부착할 테이블
    FOR EACH ROW --모든 행에 적용
BEGIN
    dbms_output.put_line('트리거가 동작함');
END;

INSERT INTO TBL_TEST VALUES('AAA123', 'HELLO');
UPDATE TBL_TEST SET TEXT = 'BYE' WHERE ID = 'AAA123';
DELETE FROM TBL_TEST WHERE ID = 'AAA123';
--------------------------------------------------------------------------------
-- AFTER TRIGGER
-- :OLD
CREATE TABLE TBL_USER(
    ID VARCHAR2(20),
    NAME VARCHAR2(20),
    ADDRESS VARCHAR2(30)
);

CREATE TABLE TBL_USER_BACKUP(
    ID VARCHAR2(20),
    NAME VARCHAR2(20),
    ADDRESS VARCHAR2(30),
    UPDATEDATE DATE DEFAULT SYSDATE,
    M_TYPE CHAR(10), --변경타입
    M_USER VARCHAR2(20) --변경한 사용자
);
-- TBL_USER에 UPDATE OR DELETE가 일어나면 기존데이터를 백업
CREATE OR REPLACE TRIGGER TBL_USER_BACKUP_TRG
    AFTER UPDATE OR DELETE
    ON TBL_USER
    FOR EACH ROW
DECLARE
    V VARCHAR2(10); --지역변수
BEGIN
    IF UPDATING THEN
        V := '수정';
    ELSIF DELETING THEN
        V := '삭제';
    END IF;
    INSERT INTO TBL_USER_BACKUP VALUES(:OLD.ID, :OLD.NAME, :OLD.ADDRESS, SYSDATE, V, USER()); --ID, NAME, ADDRESS
END;
INSERT INTO TBL_USER VALUES('AAA', 'AAA', 'AAA');
INSERT INTO TBL_USER VALUES('BBB', 'BBB', 'BBBB');
UPDATE TBL_USER SET NAME = 'NEWAAA' WHERE ID = 'AAA';
DELETE FROM TBL_USER WHERE ID = 'BBB';
SELECT * FROM TBL_USER_BACKUP;
--------------------------------------------------------------------------------
-- BEFORE TRIGGER
-- :NEW
CREATE OR REPLACE TRIGGER TBL_USER_MASKING_TRG
    BEFORE INSERT
    ON TBL_USER
    FOR EACH ROW
BEGIN
    -- INSERT 되기 전 들어오는 데이터를 홍**로 변경
    :NEW.NAME := SUBSTR(:NEW.NAME, 1, 1) || '**';
END;
INSERT INTO TBL_USER VALUES('CCC', '홍길동', '서울시');
INSERT INTO TBL_USER VALUES('DDD', '이순신', '서울시');
SELECT * FROM TBL_USER;